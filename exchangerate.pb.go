// HomeDashboard Weather Event Schema.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: exchangerate.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExchangeRate contains rate of currency translation between two difference currencies at a sepcific time.
type ExchangeRate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FromCurrency is the base currency used for exchange rate.
	FromCurrency string `protobuf:"bytes,1,opt,name=FromCurrency,proto3" json:"FromCurrency,omitempty"`
	// ToCurrency is the target currency for an exchange rate.
	ToCurrency string `protobuf:"bytes,2,opt,name=ToCurrency,proto3" json:"ToCurrency,omitempty"`
	// Rate is an exchange rate for two currencies at a specific time.
	Rate float64 `protobuf:"fixed64,3,opt,name=Rate,proto3" json:"Rate,omitempty"`
	// Timestamp is a point in time an exchange is valid.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRate) Reset() {
	*x = ExchangeRate{}
	mi := &file_exchangerate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRate) ProtoMessage() {}

func (x *ExchangeRate) ProtoReflect() protoreflect.Message {
	mi := &file_exchangerate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRate.ProtoReflect.Descriptor instead.
func (*ExchangeRate) Descriptor() ([]byte, []int) {
	return file_exchangerate_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeRate) GetFromCurrency() string {
	if x != nil {
		return x.FromCurrency
	}
	return ""
}

func (x *ExchangeRate) GetToCurrency() string {
	if x != nil {
		return x.ToCurrency
	}
	return ""
}

func (x *ExchangeRate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ExchangeRate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// ExchangeRates is a list of different exchange rates.
type ExchangeRates struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Rates is a list of ExhangeRate.
	Rates         []*ExchangeRate `protobuf:"bytes,1,rep,name=Rates,proto3" json:"Rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRates) Reset() {
	*x = ExchangeRates{}
	mi := &file_exchangerate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRates) ProtoMessage() {}

func (x *ExchangeRates) ProtoReflect() protoreflect.Message {
	mi := &file_exchangerate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRates.ProtoReflect.Descriptor instead.
func (*ExchangeRates) Descriptor() ([]byte, []int) {
	return file_exchangerate_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRates) GetRates() []*ExchangeRate {
	if x != nil {
		return x.Rates
	}
	return nil
}

var File_exchangerate_proto protoreflect.FileDescriptor

const file_exchangerate_proto_rawDesc = "" +
	"\n" +
	"\x12exchangerate.proto\x12\x06events\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x01\n" +
	"\fExchangeRate\x12\"\n" +
	"\fFromCurrency\x18\x01 \x01(\tR\fFromCurrency\x12\x1e\n" +
	"\n" +
	"ToCurrency\x18\x02 \x01(\tR\n" +
	"ToCurrency\x12\x12\n" +
	"\x04Rate\x18\x03 \x01(\x01R\x04Rate\x128\n" +
	"\tTimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tTimestamp\";\n" +
	"\rExchangeRates\x12*\n" +
	"\x05Rates\x18\x01 \x03(\v2\x14.events.ExchangeRateR\x05RatesB\n" +
	"Z\b.;eventsb\x06proto3"

var (
	file_exchangerate_proto_rawDescOnce sync.Once
	file_exchangerate_proto_rawDescData []byte
)

func file_exchangerate_proto_rawDescGZIP() []byte {
	file_exchangerate_proto_rawDescOnce.Do(func() {
		file_exchangerate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exchangerate_proto_rawDesc), len(file_exchangerate_proto_rawDesc)))
	})
	return file_exchangerate_proto_rawDescData
}

var file_exchangerate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_exchangerate_proto_goTypes = []any{
	(*ExchangeRate)(nil),          // 0: events.ExchangeRate
	(*ExchangeRates)(nil),         // 1: events.ExchangeRates
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_exchangerate_proto_depIdxs = []int32{
	2, // 0: events.ExchangeRate.Timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: events.ExchangeRates.Rates:type_name -> events.ExchangeRate
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_exchangerate_proto_init() }
func file_exchangerate_proto_init() {
	if File_exchangerate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exchangerate_proto_rawDesc), len(file_exchangerate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_exchangerate_proto_goTypes,
		DependencyIndexes: file_exchangerate_proto_depIdxs,
		MessageInfos:      file_exchangerate_proto_msgTypes,
	}.Build()
	File_exchangerate_proto = out.File
	file_exchangerate_proto_goTypes = nil
	file_exchangerate_proto_depIdxs = nil
}
