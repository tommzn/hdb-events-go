// HomeDashboard Indoor Climate Event Schema.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: indoorClimate.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Measurement types.
type MeasurementType int32

const (
	MeasurementType_TEMPERATURE MeasurementType = 0
	MeasurementType_HUMIDITY    MeasurementType = 1
	MeasurementType_BATTERY     MeasurementType = 2
)

// Enum value maps for MeasurementType.
var (
	MeasurementType_name = map[int32]string{
		0: "TEMPERATURE",
		1: "HUMIDITY",
		2: "BATTERY",
	}
	MeasurementType_value = map[string]int32{
		"TEMPERATURE": 0,
		"HUMIDITY":    1,
		"BATTERY":     2,
	}
)

func (x MeasurementType) Enum() *MeasurementType {
	p := new(MeasurementType)
	*p = x
	return p
}

func (x MeasurementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeasurementType) Descriptor() protoreflect.EnumDescriptor {
	return file_indoorClimate_proto_enumTypes[0].Descriptor()
}

func (MeasurementType) Type() protoreflect.EnumType {
	return &file_indoorClimate_proto_enumTypes[0]
}

func (x MeasurementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeasurementType.Descriptor instead.
func (MeasurementType) EnumDescriptor() ([]byte, []int) {
	return file_indoorClimate_proto_rawDescGZIP(), []int{0}
}

// Indoor Climate data contains a measurement and it's value given by a device at a specific time.
type IndoorClimate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp an indoor climate information is related to.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// DEvide which sends this measurement.
	DeviceId string `protobuf:"bytes,2,opt,name=DeviceId,proto3" json:"DeviceId,omitempty"`
	// Measurement type.
	Type MeasurementType `protobuf:"varint,3,opt,name=Type,proto3,enum=events.MeasurementType" json:"Type,omitempty"`
	// Measurement value.
	Value         string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndoorClimate) Reset() {
	*x = IndoorClimate{}
	mi := &file_indoorClimate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndoorClimate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndoorClimate) ProtoMessage() {}

func (x *IndoorClimate) ProtoReflect() protoreflect.Message {
	mi := &file_indoorClimate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndoorClimate.ProtoReflect.Descriptor instead.
func (*IndoorClimate) Descriptor() ([]byte, []int) {
	return file_indoorClimate_proto_rawDescGZIP(), []int{0}
}

func (x *IndoorClimate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *IndoorClimate) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IndoorClimate) GetType() MeasurementType {
	if x != nil {
		return x.Type
	}
	return MeasurementType_TEMPERATURE
}

func (x *IndoorClimate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// RoomClimate contains information, temperature, humidity and maybe battey level, for a single room.
type RoomClimate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp an indoor climate information is related to.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Temperature   string                 `protobuf:"bytes,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	Humidity      string                 `protobuf:"bytes,3,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
	Battery       string                 `protobuf:"bytes,4,opt,name=Battery,proto3" json:"Battery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomClimate) Reset() {
	*x = RoomClimate{}
	mi := &file_indoorClimate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomClimate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomClimate) ProtoMessage() {}

func (x *RoomClimate) ProtoReflect() protoreflect.Message {
	mi := &file_indoorClimate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomClimate.ProtoReflect.Descriptor instead.
func (*RoomClimate) Descriptor() ([]byte, []int) {
	return file_indoorClimate_proto_rawDescGZIP(), []int{1}
}

func (x *RoomClimate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RoomClimate) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *RoomClimate) GetHumidity() string {
	if x != nil {
		return x.Humidity
	}
	return ""
}

func (x *RoomClimate) GetBattery() string {
	if x != nil {
		return x.Battery
	}
	return ""
}

var File_indoorClimate_proto protoreflect.FileDescriptor

const file_indoorClimate_proto_rawDesc = "" +
	"\n" +
	"\x13indoorClimate.proto\x12\x06events\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa8\x01\n" +
	"\rIndoorClimate\x128\n" +
	"\tTimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tTimestamp\x12\x1a\n" +
	"\bDeviceId\x18\x02 \x01(\tR\bDeviceId\x12+\n" +
	"\x04Type\x18\x03 \x01(\x0e2\x17.events.MeasurementTypeR\x04Type\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\"\x9f\x01\n" +
	"\vRoomClimate\x128\n" +
	"\tTimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tTimestamp\x12 \n" +
	"\vTemperature\x18\x02 \x01(\tR\vTemperature\x12\x1a\n" +
	"\bHumidity\x18\x03 \x01(\tR\bHumidity\x12\x18\n" +
	"\aBattery\x18\x04 \x01(\tR\aBattery*=\n" +
	"\x0fMeasurementType\x12\x0f\n" +
	"\vTEMPERATURE\x10\x00\x12\f\n" +
	"\bHUMIDITY\x10\x01\x12\v\n" +
	"\aBATTERY\x10\x02B\n" +
	"Z\b.;eventsb\x06proto3"

var (
	file_indoorClimate_proto_rawDescOnce sync.Once
	file_indoorClimate_proto_rawDescData []byte
)

func file_indoorClimate_proto_rawDescGZIP() []byte {
	file_indoorClimate_proto_rawDescOnce.Do(func() {
		file_indoorClimate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indoorClimate_proto_rawDesc), len(file_indoorClimate_proto_rawDesc)))
	})
	return file_indoorClimate_proto_rawDescData
}

var file_indoorClimate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_indoorClimate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_indoorClimate_proto_goTypes = []any{
	(MeasurementType)(0),          // 0: events.MeasurementType
	(*IndoorClimate)(nil),         // 1: events.IndoorClimate
	(*RoomClimate)(nil),           // 2: events.RoomClimate
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_indoorClimate_proto_depIdxs = []int32{
	3, // 0: events.IndoorClimate.Timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: events.IndoorClimate.Type:type_name -> events.MeasurementType
	3, // 2: events.RoomClimate.Timestamp:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_indoorClimate_proto_init() }
func file_indoorClimate_proto_init() {
	if File_indoorClimate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indoorClimate_proto_rawDesc), len(file_indoorClimate_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indoorClimate_proto_goTypes,
		DependencyIndexes: file_indoorClimate_proto_depIdxs,
		EnumInfos:         file_indoorClimate_proto_enumTypes,
		MessageInfos:      file_indoorClimate_proto_msgTypes,
	}.Build()
	File_indoorClimate_proto = out.File
	file_indoorClimate_proto_goTypes = nil
	file_indoorClimate_proto_depIdxs = nil
}
